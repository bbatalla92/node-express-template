{"version":3,"sources":["containers/HomePage/components/SearchCard/SearchCard.js","containers/HomePage/components/header/Header.js","containers/HomePage/components/howItSection/HowItSection.js","containers/HomePage/HomePage.js","constants/constants.js","components/Toolbar/Toolbar.js","app/App.js","constants/routes.js","serviceWorker.js","config/firebase.js","redux/Auth/reducer.js","redux/indexReducer.js","config/reduxStore.js","config/theme.js","index.js","config/axiosConfig.js"],"names":["SearchCard","state","react_default","a","createElement","id","className","react_select_browser_esm","options","label","value","name","isClearable","isSearchable","Button_default","variant","color","Component","connect","_ref","Object","objectDestructuringEmpty","Header","components_SearchCard_SearchCard","HowItSection","tab","handleChange","event","newValue","_this","setState","this","Tabs_default","orientation","onChange","Tab_default","HomePage","components_header_Header","components_howItSection_HowItSection","BASE_API","process","REACT_APP_BIGHT_API_BASE","Toolbar","REACT_APP_PLUGIN_PATH","REACT_APP_CRYPTONATOR_API","REACT_APP_ETHERSCAN_BASE","showToolbarBackground","_this2","window","addEventListener","e","scrollY","props","toggleLoginOptions","Button_Button","onClick","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showToolbar","react_router_dom","components_Toolbar_Toolbar","react_router","exact","path","component","Boolean","location","hostname","match","config","apiKey","authDomain","databaseURL","REACT_APP_FIREBASE_DB_URL","projectId","storageBucket","messagingSenderId","app","auth","storage","initializeApp","authRef","initialState","combineReducers","arguments","length","undefined","action","type","assign","authEmailError","payload","store","createStore","reducers","applyMiddleware","reduxThunk","Custom_Theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","useNextVariants","axios","interceptors","request","use","url","includes","currentUser","getIdToken","then","headers","error","Promise","reject","ReactDOM","render","es","MuiThemeProvider","theme","src_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f87e677.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport './SearchCard.scss'\nimport Select from 'react-select'\nimport Button from \"@material-ui/core/Button\";\n\n\nclass SearchCard extends Component {\n\n    state = {};\n\n    componentDidMount() {\n    }\n\n\n    render() {\n\n        const subjectOptions = [\n            {\n                label: 'Subjects',\n                options: [\n                    {value: 'chocolate', label: 'Accounting'},\n                    {value: 'strawberry', label: 'Engineering'},\n                    {value: 'vanilla', label: 'Finance'},\n                    {value: 'vanilla', label: 'Math'},\n                    {value: 'vanilla', label: 'Computer Science'},\n                ],\n            }\n\n        ];\n\n        const timeframeOptions = [\n            {\n                label: 'Subjects',\n                options: [\n                    {value: 'chocolate', label: '1 Week'},\n                    {value: 'strawberry', label: '2 Week'},\n                    {value: 'strawberry', label: '12 Week'},\n                    {value: 'strawberry', label: 'Fall Semester'},\n                    {value: 'strawberry', label: 'Summer Semester'},\n                    {value: 'strawberry', label: 'Spring Semester'},\n                ],\n            }\n\n        ];\n\n        const locationOptions = [\n            {\n                label: 'America',\n                options: [\n                    {value: 'usa', label: 'United States'},\n                    {value: 'canada', label: 'Canada'},\n                ]\n            },\n            {\n                label: 'Asia',\n                options: [\n                    {value: 'china', label: 'China'},\n                    {value: 'japan', label: 'Japan'},\n                    {value: 'southKorea', label: 'South Korea'},\n                ]\n            },\n            {\n                label: 'Europe',\n                options: [\n                    {value: 'unitedKingdom', label: 'United Kingdom'},\n                    {value: 'france', label: 'France'},\n                    {value: 'spain', label: 'Spain'},\n                    {value: 'ireland', label: 'Ireland'},\n                ]\n            },\n        ];\n\n        return (\n            <div id=\"SearchCard\">\n                <h3 className=\"margin-0\">Find your Adventure</h3>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Location:</label>\n                    <Select options={locationOptions}\n                            name={\"Locations\"}\n                            isClearable={true}\n                            isSearchable={true}/>\n                </div>\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Subject:</label>\n                    <Select options={subjectOptions}\n                            name={\"Subject\"}\n                            isClearable={true}\n                            isSearchable={true}/>\n                </div>\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Time Frame:</label>\n                    <Select options={timeframeOptions}\n                            name={\"timeFrame\"}\n                            isClearable={true}\n                            isSearchable={true}/>\n                </div>\n\n                <Button className=\"searchButton\" variant=\"contained\" color=\"primary\">\n                  <span>  Search </span>\n                </Button>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({}) {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(SearchCard);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport './Header.scss'\nimport SearchCard from \"../SearchCard/SearchCard\";\n\nclass Header extends Component {\n\n    state = {};\n\n    componentDidMount() {\n    }\n\n    render() {\n\n        return (\n            <div id=\"Header\">\n\n                <div id='headerBackgroundImage'/>\n                <div id='backgroundTint'/>\n\n                <div className=\"headerContentContainer\">\n\n                    <div className=\"contentLeft\">\n                        <h1>STUDY ABROAD</h1>\n                        <h1>NEVER STOP LEARNING</h1>\n                        <h1>NEVER STOP EXPERIENCING</h1>\n                    </div>\n                    <div  className=\"contentRight\">\n                        <div id=\"searchCardContainer\" className=\"card-3\">\n                            <SearchCard/>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({}) {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(Header);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport \"./HowItSection.scss\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nclass HowItSection extends Component {\n\n    state = {tab: 0};\n\n    componentDidMount() {\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({'tab': newValue});\n    };\n\n    render() {\n\n        const {tab} = this.state;\n\n        return (\n            <div id=\"HowItSection\">\n\n                <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={tab}\n                    onChange={this.handleChange}\n                >\n                    <Tab label=\"Item One\"/>\n                    <Tab label=\"Item Two\" />\n                    <Tab label=\"Item Three\" />\n                    <Tab label=\"Item Four\" />\n                </Tabs>\n\n                {/*{tab === 0 && <div>\n                    Item One\n                </div>}\n\n                {tab === 1 && <div>\n                    Item two\n                </div>}\n\n                {tab === 2 && <div>\n                    Item three\n                </div>}\n\n                {tab === 3 && <div>\n                    Item four\n                </div>}*/}\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({}) {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(HowItSection);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Header from \"./components/header/Header\";\nimport HowItSection from \"./components/howItSection/HowItSection\";\n\nclass HomePage extends Component {\n\n    state = {};\n\n    componentDidMount() {\n    }\n\n    render() {\n\n        return (\n            <div id=\"HomePage\">\n\n                <Header/>\n                <HowItSection/>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({}) {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(HomePage);\n","export const BASE_API = process.env.REACT_APP_BIGHT_API_BASE;\nexport const APP_NAME = 'Linguartech';\nexport const PLUGIN_PATH =  process.env.REACT_APP_PLUGIN_PATH;\nexport const CRYPTONATOR_API = process.env.REACT_APP_CRYPTONATOR_API;\nexport const ETHERSCAN_BASE = process.env.REACT_APP_ETHERSCAN_BASE;\n\nexport const AUTH_USER_NOT_FOUND_ERROR = \"auth/user-not-found\";\nexport const AUTH_EMAIL_ALREADY_EXISTS_ERROR = \"auth/email-already-exists\";\nexport const AUTH_INVALID_PASSWORD_ERROR = \"auth/invalid-password\";\nexport const AUTH_WRONG_PASSWORD_ERROR = \"auth/wrong-password\";\nexport const AUTH_INVALID_EMAIL_ERROR = \"auth/invalid-email\";\nexport const AUTH_WEAK_PASSWORD_ERROR = \"auth/weak-password\";\nexport const AUTH_EMAIL_ALREADY_IN_USE_ERROR = \"auth/email-already-in-use\";\n\nexport const USERS_TERMS_OF_SERVICE = \"terms\";\nexport const MERCHANT_AGREEMENT = \"merch\";\nexport const PRIVATE_POLICY_AGREEMENT = \"privacy\";\n\n// Login Flow\nexport const LOGIN_FORM = \"LOGIN_FORM\";\nexport const SIGNUP_FORM = \"SIGNUP_FORM\";\nexport const FORGOT_EMAIL_FORM = \"FORGOT_EMAIL_FORM\";","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport \"./Toolbar.scss\"\nimport Button from \"@material-ui/core/es/Button/Button\";\nimport {APP_NAME} from \"../../constants/constants\";\n\nclass Toolbar extends Component {\n\n    state = {showToolbarBackground: false};\n\n    componentWillMount() {\n\n        window.addEventListener('scroll', (e) => {\n\n            if (window.scrollY > 100) {\n                this.setState({showToolbarBackground: true})\n            } else {\n                this.setState({showToolbarBackground: false})\n            }\n\n        });\n\n    }\n\n    render() {\n\n        const {showToolbarBackground} = this.state;\n        const {toggleLoginOptions} = this.props;\n\n\n        return (\n            <div id=\"ToolbarCmpnt\">\n\n                <div className={\"background transition \" + (showToolbarBackground ? \"showBackground\" : \"\")}/>\n\n                <div className={\"flex-row\"} id=\"toolbarContainer\">\n\n                   {/* <img className=\"logo\" src={GenieSVG} alt=\"Genie\"/>*/}\n\n                    <div className=\"appName\">\n                        {APP_NAME}\n                    </div>\n\n                    <div className=\"flex-1\"/>\n\n                    <Button variant=\"outlined\" className=\"border-color-white margin-right-16 toolbarButton\">\n                        <span className=\"toolbarButtonText\" onClick={()=>{}}>Login</span>\n                    </Button>\n\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps() {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(Toolbar);\n","import React, {Component} from 'react';\nimport './App.scss';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport {connect} from \"react-redux\";\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport Toolbar from \"../components/Toolbar/Toolbar\";\n\n\nclass App extends Component {\n\n    state = {\n        showToolbar: true\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {showToolbar} = this.state;\n\n        return (\n            <Router>\n                <div id=\"App\">\n                    {showToolbar &&  <Toolbar/>}\n                    <div>\n                        <Switch>\n                            <Route exact path={ROUTES.HOME_ROUTE} component={HomePage}/>\n                            <Route component={HomePage}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nfunction mapStateToProps({}) {\n    return {};\n}\n\nexport default connect(mapStateToProps, {})(App);\n","export const HOME_ROUTE = '/';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID\n};\n\nlet app = {\n    auth: () => {},\n    storage: () => {}\n};\n\nif (config.apiKey) {\n    app = App;\n    app.initializeApp(config);\n}\n\nexport const authRef = app.auth();\n\nexport const storageRef = app.storage();\n\n","import {} from \"../types\";\n\nlet initialState = {};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case \"EXAMPLE_KEY\":\n            return Object.assign({}, state, {authEmailError: action.payload});\n        default:\n            return state;\n    }\n};","import {combineReducers} from \"redux\";\n\nimport auth from \"./Auth/reducer\";\n\nexport default combineReducers({\n    auth\n});","import reduxThunk from \"redux-thunk\";\nimport {applyMiddleware, createStore} from \"redux\";\nimport reducers from \"../redux/indexReducer\";\n\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nexport const Custom_Theme = createMuiTheme(\n    {\n\n        palette: {\n            primary: {\n                // light: will be calculated from palette.primary.main,\n                main: '#2484C6',\n                // dark: will be calculated from palette.primary.main,\n                // contrastText: will be calculated to contrast with palette.primary.main\n            },\n            secondary: {\n                // light: will be calculated from palette.secondary.main,\n                main: '#7587A2',\n                contrastText: '#ffcc00',\n            }\n        },\n        typography: {\n            useNextVariants: true,\n        },\n    }\n);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport axios from 'axios';\nimport {requestInterceptor} from \"./config/axiosConfig\";\nimport {store} from \"./config/reduxStore\";\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\nimport {Custom_Theme} from \"./config/theme\";\n\n\naxios.interceptors.request.use(requestInterceptor, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme={Custom_Theme}>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","import {authRef} from \"./firebase\";\nimport {BASE_API} from \"../constants/constants\";\n\n\nexport const requestInterceptor = (config) => {\n\n    if (!config.url.includes(BASE_API)) {\n        return config;\n    }\n\n    return authRef.currentUser.getIdToken(false)\n        .then((id) => {\n            config.headers[\"Authorization\"] = \"Bearer \" + id;\n            return config;\n        });\n\n};\n\n\n\n"],"sourceRoot":""}