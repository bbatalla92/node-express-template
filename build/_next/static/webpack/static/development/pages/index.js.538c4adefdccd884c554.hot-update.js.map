{"version":3,"file":"static/webpack/static/development/pages/index.js.538c4adefdccd884c554.hot-update.js","sources":["webpack:///./components/ContactUs/ContactUs.js"],"sourcesContent":["import React, {Component} from 'react';\nimport \"./ContactUs.scss\";\nimport {validateEmail, validatePhoneNumber} from \"../../Utils\";\nimport CountryCodesMap from \"../../countryCodes\"\n\nclass ContactUs extends Component {\n\n    state = {\n        form: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            additionalInfo: \"\"\n        },\n        formErrors: {email: \"\"},\n        formValidated: false\n    };\n\n\n    componentDidMount() {\n\n    }\n\n\n    onFormChange = (event) => {\n        if (!event.target || !event.target.name) {\n            return;\n        }\n        let form = {...this.state.form, [event.target.name]: event.target.value};\n\n        this.setState(state => {\n            return {...state, form: form}\n        }, this.validateForm);\n    };\n\n    validatePhoneNumber = () => {\n        let error = \"\";\n        if (!validatePhoneNumber(this.state.form.phoneNumber)) {\n            error = \"This is not a correctly formatted Phone number.  Must have country code.\";\n        }\n        let formErrors = {...this.state.formErrors, phoneNumber: error};\n        this.setState({formErrors: formErrors})\n    };\n\n    validateEmail = () => {\n        let error = \"\";\n        if (!validateEmail(this.state.form.email)) {\n            error = \"This is not a correctly formatted Email.\";\n        }\n        let formErrors = {...this.state.formErrors, email: error};\n        this.setState({formErrors: formErrors})\n\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        fetch('http://localhost:8080/api/v1/contact', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                ...this.state.form\n            })\n        })\n            .then(response => {\n                return response;\n            }).then(response => {\n            console.log(response.json());\n        })\n            .catch(error => console.log(error))\n\n    };\n\n    validateForm = () => {\n        let form = this.state.form;\n        let success = true;\n        let formErrors = this.state.formErrors;\n        for (let key in form) {\n            if (key === \"additionalInfo\") {\n                continue;\n            }\n\n            if (form.hasOwnProperty(key) && !form[key]) {\n                success = false;\n                formErrors[key] = `This field is required.`;\n            } else {\n                delete formErrors[key]\n            }\n\n            if (key === 'email') {\n                this.validateEmail();\n            }\n\n        }\n\n        this.setState({formValidated: success, formErrors: formErrors});\n    };\n\n\n    render() {\n\n        const {form, formValidated, formErrors} = this.state;\n\n        return (\n            <div id=\"ContactUs\">\n\n                <h1 className=\"text-align-center font-weight-light color-primary\"\n                    ling-translate=\"ContactUsSectionTitle\">Contact Us</h1>\n\n                <form onSubmit={this.submitForm} className=\"form\">\n\n                    <div className=\"inputLabel\">\n                        <label ling-translate=\"ContactUsFirstName\" required={true}>First Name</label>\n                        <div className=\"flex-direction-column\">\n                            <input ling-translate=\"ContactUsFirstName\" value={form.firstName}\n                                   onChange={this.onFormChange} name={\"firstName\"}\n                                   placeholder=\"First Name\"\n                                   className=\"input\" type=\"text\"/>\n                            <div>\n                                <span ling-translate=\"ContactUsFormError\"\n                                      className=\"formError\">{formErrors.firstName}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"inputLabel\">\n                        <label ling-translate=\"ContactUsLastName\" required={true}>Last Name</label>\n                        <div className=\"flex-direction-column\">\n                            <input ling-translate=\"ContactUsLastName\" value={form.lastName} onChange={this.onFormChange}\n                                   name={\"lastName\"}\n                                   placeholder=\"Last Name\"\n                                   className=\"input\" type=\"text\"/>\n                            <div>\n                                <span ling-translate=\"ContactUsFormError\"\n                                      className=\"formError\">{formErrors.lastName}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"inputLabel\">\n                        <label ling-translate=\"ContactUsEmail\" required={true}>Email</label>\n                        <div className=\"flex-direction-column\">\n                            <input ling-translate=\"ContactUsEmail\" value={form.email} onChange={this.onFormChange}\n                                   name={\"email\"}\n                                   placeholder=\"Email\"\n                                   className=\"input\" type=\"email\"/>\n                            <div>\n                                <span ling-translate=\"ContactUsFormError\"\n                                      className=\"formError\">{formErrors.email}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"inputLabel\">\n                        <label ling-translate=\"ContactUsPhoneNumber\" required={true}>Phone Number</label>\n                        <div className=\"flex-direction-column\">\n                            <input ling-translate=\"ContactUsPhoneNumber\" value={form.phoneNumber}\n                                   onChange={this.onFormChange} name={\"phoneNumber\"}\n                                   placeholder=\"+1 555 5555\"\n                                   className=\"input\" type=\"tel\"/>\n                            <div>\n                                {!formErrors.phoneNumber &&\n                                <span ling-translate=\"ContactUsPhoneNumberHint\"\n                                      className={\"inputHint\"}>{\"Please include country code as well.\"}</span>}\n                                {formErrors.phoneNumber &&\n                                <span ling-translate=\"ContactUsFormError\"\n                                      className={\"formError\"}>{formErrors.phoneNumber}</span>}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"inputLabel\">\n                        <label/>\n                        <textarea ling-translate=\"ContactUsAdditionalInfo\" value={form.additionalInfo}\n                                  onChange={this.onFormChange} name={\"additionalInfo\"}\n                                  placeholder=\"(Optional) Any questions or comments you would like us to know ahead of time!\"\n                                  className=\"input\" style={{minHeight: \"170px\", lineHeight: \"22px\"}}/>\n                    </div>\n\n\n                    <button ling-translate=\"SubmitButton\" disabled={!formValidated} id=\"submitButton\" type=\"submit\"\n                            className=\"standard-button\">Submit\n                    </button>\n\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default ContactUs;\n"],"mappings":"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","sourceRoot":""}