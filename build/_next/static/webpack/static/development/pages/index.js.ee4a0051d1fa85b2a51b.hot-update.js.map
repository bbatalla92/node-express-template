{"version":3,"file":"static/webpack/static/development/pages/index.js.ee4a0051d1fa85b2a51b.hot-update.js","sources":["webpack:///./components/Footer/Footer.js","webpack:///./translate.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport \"./Footer.scss\"\nimport {APP_NAME} from \"../../constants\";\nimport * as translator from \"../../translate\";\n\nclass Footer extends Component {\n\n    state = {\n        language: \"en\",\n        availableLanguages: [\n            {code: \"en\", title: \"English\"},\n            {code: \"zh\", title: \"Chinese\"},\n        ],\n        languageCodes: {\n            \"en\": \"en\",\n            \"en-US\": \"en\",\n            \"zh\": \"zh\",\n            \"zh-hk\": \"zh\",\n            \"zh-sg\": \"zh\",\n            \"zh-tw\": \"zh\",\n        }\n\n    };\n\n    constructor(props) {\n        super(props);\n\n        translator.setElementKey(\"ling-translate\");\n    }\n\n    componentDidMount() {\n\n        let browserLanguage = window.navigator.language;\n        this.setGlobalLanguage(this.state.languageCodes[browserLanguage]);\n    }\n\n    setLanguage = (event) => {\n        let code = event.target.value;\n        this.setGlobalLanguage(code);\n\n    };\n\n    setGlobalLanguage = (code) => {\n        console.log(code);\n        this.setState({language: code});\n\n        translator.translateContent(code);\n    };\n\n    render() {\n\n        const {availableLanguages, language} = this.state;\n\n        return (\n            <div id=\"FooterComponent\">\n\n                <h2 className=\"color-white\">{APP_NAME}</h2>\n\n                <h4 id=\"languageSelectLabel\">Language</h4>\n\n                <select value={language} id=\"languageSelect\" onChange={this.setLanguage}>\n                    {availableLanguages.map((lang, key) => {\n                        return <option key={key} value={lang.code}>{lang.title}</option>\n                    })}\n                </select>\n\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import content from \"./translatedContent.json\"\n\nlet attribute = null;\n\n\nexport const setElementKey = (key) => {\n    attribute = key;\n};\n\n\nexport const translateContent = (code) => {\n    let elements = document.querySelectorAll(`[${attribute}]`);\n\n    if(!elements.length){\n        return;\n    }\n\n    elements.forEach((element)=>{\n        console.log(element);\n    });\n\n\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAmBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAhBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AACA;AAgBA;AAaA;AACA;AAAA;AAEA;AACA;AAjBA;AAmBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AArBA;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;;;AAeA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;AA/DA;AACA;AAiEA;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;A","sourceRoot":""}