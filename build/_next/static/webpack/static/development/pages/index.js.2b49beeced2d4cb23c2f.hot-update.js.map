{"version":3,"file":"static/webpack/static/development/pages/index.js.2b49beeced2d4cb23c2f.hot-update.js","sources":["webpack:///./components/Sidenav/Sidenav.js","webpack:///./components/Toolbar/Toolbar.js","webpack:///./constants.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {emit, subscribe} from \"event-subscription\";\nimport {SUBSCRIBE_ACTIVE_SECTION, SUBSCRIBE_NAV_DRAWER} from \"../../constants\";\nimport \"./Sidenav.scss\"\n\nclass Sidenav extends Component {\n\n    state = {\n        merchantPopup: false,\n        navDrawerOpen: false,\n        options: [\n            {\n                title: \"Home\",\n                scrollTo: 0\n            }, {\n                title: \"About\",\n                scrollTo: \"About\"\n            }, {\n                title: \"Our Team\",\n                scrollTo: \"TeamComponent\"\n            }, {\n                title: \"How It Works\",\n                scrollTo: \"StepsComponent\"\n            }, {\n                title: \"Contact Us\",\n                scrollTo: \"ContactUs\"\n            },\n        ]\n    };\n\n    sideDrawerSubscription = null;\n    activeSectionSubscription = null;\n\n    componentWillMount() {\n\n        this.sideDrawerSubscription = subscribe(SUBSCRIBE_NAV_DRAWER, this.toggleNavDrawer)\n        this.activeSectionSubscription = subscribe(SUBSCRIBE_ACTIVE_SECTION, this.toggleNavDrawer)\n\n    }\n\n    componentWillUnmount() {\n\n        this.sideDrawerSubscription.unsubscribe();\n        this.activeSectionSubscription.unsubscribe();\n\n    }\n\n    changePage = (path) => {\n\n    };\n\n    toggleNavDrawer = (override) => {\n        this.setState(state => {\n            return {\n                ...state,\n                navDrawerOpen: typeof override === 'boolean' ? override : !state.navDrawerOpen\n            }\n        })\n    };\n\n    render() {\n\n        const {navDrawerOpen, options} = this.state;\n        const {scrollTo} = this.props;\n\n        return (\n            <div id=\"SidenavCmpnt\">\n                <div\n                    className={navDrawerOpen ? \"display-block\" : \"display-none\"}\n                    id=\"sidenavTint\" onClick={this.toggleNavDrawer}/>\n\n                <div id=\"sidenavContent\"\n                     className={navDrawerOpen ? \"navOpen\" : \"navClosed\"}>\n\n                    {options.map((option, key) => {\n                        return <button key={key} className=\"sidenavButton\" onClick={() => {\n                            scrollTo(option.scrollTo)\n                        }}> {option.title}</button>\n                    })}\n\n\n                    <span className=\"flex-1\"/>\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Sidenav;\n\n","import \"./Toolbar.scss\"\nimport React, {Component} from 'react';\nimport MENU_ICON from \"../../assets/icons/menu.svg\";\nimport {emit} from \"event-subscription\";\nimport {SUBSCRIBE_ACTIVE_SECTION, SUBSCRIBE_NAV_DRAWER} from \"../../constants\";\n\n\n\nclass Toolbar extends Component {\n\n    state = {showToolbarBackground: false, active: \"HeaderComponent\"};\n\n    componentDidMount = () => {\n\n        this.setState({showToolbarBackground: window.scrollY > 100});\n        this.setActiveSection();\n\n        window.addEventListener('scroll', (e) => {\n            if (window.scrollY > 100) {\n                this.setState({showToolbarBackground: true})\n            } else {\n                this.setState({showToolbarBackground: false})\n            }\n\n            this.setActiveSection()\n\n\n        });\n\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', false);\n    }\n\n    setActiveSection = () => {\n        let ids = [\"HeaderComponent\", \"About\", \"TeamComponent\", \"StepsComponent\", \"ContactUs\"];\n\n        for (let i in ids) {\n            if (ids.hasOwnProperty(i)) {\n                let id = ids[i];\n                let el = document.getElementById(id);\n                if (el.offsetTop - window.scrollY < 150 && el.offsetTop - window.scrollY >= -5) {\n                    this.setState({active: id});\n                    emit(SUBSCRIBE_ACTIVE_SECTION, id);\n                    break;\n                }\n            }\n        }\n    };\n\n    toggleSideDrawer = () => {\n        emit(SUBSCRIBE_NAV_DRAWER, null);\n    };\n\n    render() {\n\n        const {showToolbarBackground, active} = this.state;\n        const {scrollTo} = this.props;\n\n        return (<div id=\"ToolbarCmpnt\" className={showToolbarBackground ? \"showBackground\" : \"\"}>\n\n            <button id=\"menuIconButton\" onClick={this.toggleSideDrawer}>\n                <img id=\"menuIcon\" src={MENU_ICON} alt=\"Menu\"/>\n            </button>\n\n            <h1 id=\"name\">Linguartech</h1>\n\n            <span className=\"flex-1\"/>\n\n            <div className={\"navOption \" + (active === \"HeaderComponent\" ? \"navOptionActive\" : \"\")} onClick={() => {\n                scrollTo(0)\n            }}>\n                <h3>Home</h3>\n            </div>\n            <div className={\"navOption \" + (active === \"About\" ? \"navOptionActive\" : \"\")} onClick={() => {\n                scrollTo(\"About\")\n            }}>\n                <h3>About</h3>\n            </div>\n            <div className={\"navOption \" + (active === \"TeamComponent\" ? \"navOptionActive\" : \"\")} onClick={() => {\n                scrollTo(\"TeamComponent\")\n            }}>\n                <h3>Our Team</h3>\n            </div>\n            <div className={\"navOption \" + (active === \"StepsComponent\" ? \"navOptionActive\" : \"\")} onClick={() => {\n                scrollTo(\"StepsComponent\")\n            }}>\n                <h3>How It Works</h3>\n            </div>\n            <div className={\"navOption \" + (active === \"ContactUs\" ? \"navOptionActive\" : \"\")} onClick={() => {\n                scrollTo(\"ContactUs\")\n            }}>\n                <h3>Contact Us</h3>\n            </div>\n\n        </div>)\n\n    };\n}\n\n\nexport default Toolbar;","export const APP_NAME = \"linguartech\";\n\nexport const SUBSCRIBE_NAV_DRAWER = \"SUBSCRIBE_NAV_DRAWER\";\nexport const SUBSCRIBE_ACTIVE_SECTION = \"SUBSCRIBE_ACTIVE_SECTION\";"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAhBA;AACA;AAsBA;AACA;AAAA;AACA;AAeA;AACA;AAGA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;;;;;;AA1BA;AAEA;AACA;AAEA;;;AAEA;AAEA;AACA;AAEA;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlFA;AACA;AAqFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAvBA;AACA;AACA;;;AAsBA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1FA;AACA;AA6FA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;A","sourceRoot":""}